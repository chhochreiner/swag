package at.ac.tuwien.swag.model.domain.quartz;

// Generated Jun 11, 2011 5:07:29 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * QrtzTriggers generated by hbm2java
 */
@Entity
@Table(name = "qrtz_triggers", schema = "public")
public class QrtzTriggers implements java.io.Serializable {

	private QrtzTriggersId id;
	private QrtzJobDetails qrtzJobDetails;
	private String description;
	private Long nextFireTime;
	private Long prevFireTime;
	private Integer priority;
	private String triggerState;
	private String triggerType;
	private long startTime;
	private Long endTime;
	private String calendarName;
	private Short misfireInstr;
	private byte[] jobData;
	private QrtzBlobTriggers qrtzBlobTriggers;
	private QrtzSimpropTriggers qrtzSimpropTriggers;
	private QrtzCronTriggers qrtzCronTriggers;
	private QrtzSimpleTriggers qrtzSimpleTriggers;

	public QrtzTriggers() {
	}

	public QrtzTriggers( QrtzTriggersId id, QrtzJobDetails qrtzJobDetails,
			String triggerState, String triggerType, long startTime ) {
		this.id = id;
		this.qrtzJobDetails = qrtzJobDetails;
		this.triggerState = triggerState;
		this.triggerType = triggerType;
		this.startTime = startTime;
	}

	public QrtzTriggers( QrtzTriggersId id, QrtzJobDetails qrtzJobDetails,
			String description, Long nextFireTime, Long prevFireTime,
			Integer priority, String triggerState, String triggerType,
			long startTime, Long endTime, String calendarName,
			Short misfireInstr, byte[] jobData,
			QrtzBlobTriggers qrtzBlobTriggers,
			QrtzSimpropTriggers qrtzSimpropTriggers,
			QrtzCronTriggers qrtzCronTriggers,
			QrtzSimpleTriggers qrtzSimpleTriggers ) {
		this.id = id;
		this.qrtzJobDetails = qrtzJobDetails;
		this.description = description;
		this.nextFireTime = nextFireTime;
		this.prevFireTime = prevFireTime;
		this.priority = priority;
		this.triggerState = triggerState;
		this.triggerType = triggerType;
		this.startTime = startTime;
		this.endTime = endTime;
		this.calendarName = calendarName;
		this.misfireInstr = misfireInstr;
		this.jobData = jobData;
		this.qrtzBlobTriggers = qrtzBlobTriggers;
		this.qrtzSimpropTriggers = qrtzSimpropTriggers;
		this.qrtzCronTriggers = qrtzCronTriggers;
		this.qrtzSimpleTriggers = qrtzSimpleTriggers;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "schedName", column = @Column(name = "sched_name", nullable = false, length = 120)),
			@AttributeOverride(name = "triggerName", column = @Column(name = "trigger_name", nullable = false, length = 200)),
			@AttributeOverride(name = "triggerGroup", column = @Column(name = "trigger_group", nullable = false, length = 200)) })
	public QrtzTriggersId getId() {
		return this.id;
	}

	public void setId( QrtzTriggersId id ) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "sched_name", referencedColumnName = "sched_name", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "job_name", referencedColumnName = "job_name", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "job_group", referencedColumnName = "job_group", nullable = false, insertable = false, updatable = false) })
	public QrtzJobDetails getQrtzJobDetails() {
		return this.qrtzJobDetails;
	}

	public void setQrtzJobDetails( QrtzJobDetails qrtzJobDetails ) {
		this.qrtzJobDetails = qrtzJobDetails;
	}

	@Column(name = "description", length = 250)
	public String getDescription() {
		return this.description;
	}

	public void setDescription( String description ) {
		this.description = description;
	}

	@Column(name = "next_fire_time")
	public Long getNextFireTime() {
		return this.nextFireTime;
	}

	public void setNextFireTime( Long nextFireTime ) {
		this.nextFireTime = nextFireTime;
	}

	@Column(name = "prev_fire_time")
	public Long getPrevFireTime() {
		return this.prevFireTime;
	}

	public void setPrevFireTime( Long prevFireTime ) {
		this.prevFireTime = prevFireTime;
	}

	@Column(name = "priority")
	public Integer getPriority() {
		return this.priority;
	}

	public void setPriority( Integer priority ) {
		this.priority = priority;
	}

	@Column(name = "trigger_state", nullable = false, length = 16)
	public String getTriggerState() {
		return this.triggerState;
	}

	public void setTriggerState( String triggerState ) {
		this.triggerState = triggerState;
	}

	@Column(name = "trigger_type", nullable = false, length = 8)
	public String getTriggerType() {
		return this.triggerType;
	}

	public void setTriggerType( String triggerType ) {
		this.triggerType = triggerType;
	}

	@Column(name = "start_time", nullable = false)
	public long getStartTime() {
		return this.startTime;
	}

	public void setStartTime( long startTime ) {
		this.startTime = startTime;
	}

	@Column(name = "end_time")
	public Long getEndTime() {
		return this.endTime;
	}

	public void setEndTime( Long endTime ) {
		this.endTime = endTime;
	}

	@Column(name = "calendar_name", length = 200)
	public String getCalendarName() {
		return this.calendarName;
	}

	public void setCalendarName( String calendarName ) {
		this.calendarName = calendarName;
	}

	@Column(name = "misfire_instr")
	public Short getMisfireInstr() {
		return this.misfireInstr;
	}

	public void setMisfireInstr( Short misfireInstr ) {
		this.misfireInstr = misfireInstr;
	}

	@Column(name = "job_data")
	public byte[] getJobData() {
		return this.jobData;
	}

	public void setJobData( byte[] jobData ) {
		this.jobData = jobData;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "qrtzTriggers")
	public QrtzBlobTriggers getQrtzBlobTriggers() {
		return this.qrtzBlobTriggers;
	}

	public void setQrtzBlobTriggers( QrtzBlobTriggers qrtzBlobTriggers ) {
		this.qrtzBlobTriggers = qrtzBlobTriggers;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "qrtzTriggers")
	public QrtzSimpropTriggers getQrtzSimpropTriggers() {
		return this.qrtzSimpropTriggers;
	}

	public void setQrtzSimpropTriggers( QrtzSimpropTriggers qrtzSimpropTriggers ) {
		this.qrtzSimpropTriggers = qrtzSimpropTriggers;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "qrtzTriggers")
	public QrtzCronTriggers getQrtzCronTriggers() {
		return this.qrtzCronTriggers;
	}

	public void setQrtzCronTriggers( QrtzCronTriggers qrtzCronTriggers ) {
		this.qrtzCronTriggers = qrtzCronTriggers;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "qrtzTriggers")
	public QrtzSimpleTriggers getQrtzSimpleTriggers() {
		return this.qrtzSimpleTriggers;
	}

	public void setQrtzSimpleTriggers( QrtzSimpleTriggers qrtzSimpleTriggers ) {
		this.qrtzSimpleTriggers = qrtzSimpleTriggers;
	}

}
